<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2015 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
-->
<resources>

  <declare-styleable name="MaterialComponentsTheme">
    <!-- The primary branding color for the app. -->
    <attr name="colorPrimary"/>
    <!-- The light variant of the primary color. -->
    <attr name="colorPrimaryLight" format="color"/>
    <!-- The dark variant of the primary color. -->
    <attr name="colorPrimaryDark"/>
    <!-- The secondary branding color for the app, usually a bright complement to the primary branding color. -->
    <attr name="colorSecondary" format="color"/>
    <!-- The light variant of the secondary color. -->
    <attr name="colorSecondaryLight" format="color"/>
    <!-- The dark variant of the secondary color. -->
    <attr name="colorSecondaryDark" format="color"/>
    <!-- The accent color that's applied to many components and controls.
         This is set to colorSecondary by default, but can also be set to colorPrimary.  -->
    <attr name="colorAccent"/>
    <!-- The primary color palette, used by components to choose similar primary colors for
         accessibility. This is expected to either be empty or to contain 10 colors representing
         the primary tonal variations, ordered from light to dark. Reference to a typed array
         resource. -->
    <attr name="colorPalettePrimary" format="reference"/>
    <!-- The secondary color palette, used by components to choose similar secondary colors for
         accessibility. This is expected to either be empty or to contain 10 colors representing
         the secondary tonal variations, ordered from light to dark. Reference to a typed array
         resource. -->
    <attr name="colorPaletteSecondary" format="reference"/>

    <!-- The scrim background that appears below modals and expanded navigation menus.
         The background can either be a color or a bitmap drawable with tileMode set to repeat. -->
    <attr name="scrimBackground" format="color|reference"/>

    <!-- Theme to use for modal bottom sheet dialogs spawned from this theme. -->
    <attr name="bottomSheetDialogTheme" format="reference"/>
    <!-- Style to use for modal bottom sheets in this theme. -->
    <attr name="bottomSheetStyle" format="reference"/>
    <!-- Style to use for MaterialButtons in this theme. -->
    <attr name="materialButtonStyle" format="reference"/>
    <!-- Style to use MaterialSwitch in this theme. -->
    <attr name="materialSwitchStyle" format="reference"/>
    <!-- Style to use for FloatingActionButtons in this theme. -->
    <attr name="floatingActionButtonStyle" format="reference"/>
    <!-- Style to use for ChipGroups in this theme. -->
    <attr name="chipGroupStyle" format="reference"/>
    <!-- Style to use for Chips in this theme, usually to be used as a view. -->
    <attr name="chipStyle" format="reference"/>
    <!-- Style to use for standalone Chips in this theme, usually to be used in an EditText. -->
    <attr name="chipStandaloneStyle" format="reference"/>
    <!-- Style to use for BottomAppBar in this theme. -->
    <attr name="bottomAppBarStyle" format="reference"/>
    <!-- Style to use for MaterialCardView in this theme. -->
    <attr name="cardViewStyle" format="reference"/>
  </declare-styleable>

  <declare-styleable name="BottomAppBar">
    <!-- Background for the BottomAppBar. -->
    <attr name="backgroundTint"/>
    <!-- The diameter of the semi-circular cradle for the fab. -->
    <attr name="fabCradleDiameter" format="dimension"/>
    <!-- The radius of the rounded corners on each side of the cradle. -->
    <attr name="fabCradleRoundedCornerRadius" format="dimension"/>
    <!-- The vertical offset between the fab from the cradle. -->
    <attr name="fabCradleVerticalOffset" format="dimension"/>
  </declare-styleable>

  <declare-styleable name="ChipDrawable">
    <!-- Background color to apply to the chip. -->
    <attr name="chipBackgroundColor" format="color"/>
    <!-- Min height to apply to the chip. Total height includes stroke width. -->
    <attr name="chipMinHeight" format="dimension"/>
    <!-- Corner radius to apply to the chip's shape. -->
    <attr name="chipCornerRadius" format="dimension"/>
    <!-- Stroke color to apply to the chip's outline. -->
    <attr name="chipStrokeColor" format="color"/>
    <!-- Stroke width to apply to the chip's outline. -->
    <attr name="chipStrokeWidth" format="dimension"/>
    <!-- Ripple color to apply to the chip. -->
    <attr name="rippleColor"/>

    <!-- Text to display on the chip. -->
    <attr name="chipText" format="string" localization="suggested"/>
    <!-- Default appearance of text: color, typeface, size, and style. -->
    <attr name="android:textAppearance"/>

    <!-- Whether to show the chip icon. -->
    <attr name="chipIconEnabled" format="boolean"/>
    <!-- Icon drawable to display at the start of the chip. -->
    <attr name="chipIcon" format="reference"/>
    <!-- Size of the chip's icon and checked icon. -->
    <attr name="chipIconSize" format="dimension"/>

    <!-- Whether to show the close icon. -->
    <attr name="closeIconEnabled" format="boolean"/>
    <!-- Close icon drawable to display at the end of the chip. -->
    <attr name="closeIcon" format="reference"/>
    <!-- Tint to apply to the chip's close icon. -->
    <attr name="closeIconTint" format="color"/>
    <!-- Size of the chip's close icon. -->
    <attr name="closeIconSize" format="dimension"/>

    <!-- Whether the chip can be checked. If false, the chip will act as a button. -->
    <attr name="android:checkable"/>
    <!-- Whether to show the checked icon. -->
    <attr name="checkedIconEnabled" format="boolean"/>
    <!-- Check icon drawable to overlay the chip's icon. -->
    <attr name="checkedIcon" format="reference"/>

    <!-- Motion spec for show animation. This should be a MotionSpec resource. -->
    <attr name="showMotionSpec"/>
    <!-- Motion spec for hide animation. This should be a MotionSpec resource. -->
    <attr name="hideMotionSpec"/>

    <!-- The following attributes are adjustable padding on the chip, listed from start to end. -->

    <!-- Chip starts here. -->

    <!-- Padding at the start of the chip, before the icon. -->
    <attr name="chipStartPadding" format="dimension"/>
    <!-- Padding at the start of the icon, after the start of the chip. If icon exists. -->
    <attr name="iconStartPadding" format="dimension"/>

    <!-- Icon is here. -->

    <!-- Padding at the end of the icon, before the text. If icon exists. -->
    <attr name="iconEndPadding" format="dimension"/>
    <!-- Padding at the start of the text, after the icon. -->
    <attr name="textStartPadding" format="dimension"/>

    <!-- Text is here. -->

    <!-- Padding at the end of the text, before the close icon. -->
    <attr name="textEndPadding" format="dimension"/>
    <!-- Padding at the start of the close icon, after the text. If close icon exists. -->
    <attr name="closeIconStartPadding" format="dimension"/>

    <!-- Close icon is here. -->

    <!-- Padding at the end of the close icon, before the end of the chip. If close icon exists. -->
    <attr name="closeIconEndPadding" format="dimension"/>
    <!-- Padding at the end of the chip, after the close icon. -->
    <attr name="chipEndPadding" format="dimension"/>

    <!-- Chip ends here. -->
  </declare-styleable>

  <declare-styleable name="ChipGroup">

    <!-- Horizontal and vertical spacing between chips in this group. -->
    <attr name="chipSpacing" format="dimension"/>
    <!-- Horizontal spacing between chips in this group. -->
    <attr name="chipSpacingHorizontal" format="dimension"/>
    <!-- Vertical spacing between chips in this group. -->
    <attr name="chipSpacingVertical" format="dimension"/>

    <!-- Constrains the chips in this group to a single horizontal line. By default, this is false
         and the chips in this group will reflow to multiple lines.

         If you set this to true, you'll usually want to wrap this ChipGroup in a
         HorizontalScrollView. -->
    <attr name="singleLine" format="boolean"/>

    <!-- Whether only a single chip in this group is allowed to be checked at any time. By default,
         this is false and multiple chips in this group are allowed to be checked at once. -->
    <attr name="singleSelection" format="boolean"/>
    <!-- The id of the child chip that should be checked by default within this chip group. -->
    <attr name="checkedChip" format="reference"/>

  </declare-styleable>

  <declare-styleable name="FloatingActionButton">
    <!-- Background for the FloatingActionButton -->
    <attr name="backgroundTint"/>
    <attr name="backgroundTintMode"/>

    <!-- Ripple color for the FAB. -->
    <attr name="rippleColor" format="color"/>

    <!-- Size for the FAB. If fabCustomSize is set, this will be ignored. -->
    <attr name="fabSize">
      <!-- A size which will change based on the window size. -->
      <enum name="auto" value="-1"/>
      <!-- The normal sized button. -->
      <enum name="normal" value="0"/>
      <!-- The mini sized button. -->
      <enum name="mini" value="1"/>
    </attr>
    <!-- Custom size for the FAB. If this is set, fabSize will be ignored. -->
    <attr name="fabCustomSize" format="dimension"/>
    <!-- Elevation value for the FAB -->
    <attr name="elevation"/>
    <!-- TranslationZ value for the FAB when hovered, focused, or hovered and focused. -->
    <attr name="hoveredFocusedTranslationZ" format="dimension"/>
    <!-- TranslationZ value for the FAB when pressed-->
    <attr name="pressedTranslationZ" format="dimension"/>
    <!-- The width of the border around the FAB. -->
    <attr name="borderWidth" format="dimension"/>
    <!-- Enable compat padding. -->
    <attr name="useCompatPadding" format="boolean"/>
    <!-- Maximum icon image size. -->
    <attr name="maxImageSize" format="dimension"/>
    <!-- Motion spec for show animation. This should be a MotionSpec resource. -->
    <attr name="showMotionSpec" format="reference"/>
    <!-- Motion spec for hide animation. This should be a MotionSpec resource. -->
    <attr name="hideMotionSpec" format="reference"/>
  </declare-styleable>

  <declare-styleable name="FloatingActionButton_Behavior_Layout">
    <!-- Whether the FAB should automatically hide when there is no space for it. -->
    <attr name="behavior_autoHide" format="boolean"/>
  </declare-styleable>

  <declare-styleable name="NavigationView">
    <attr name="android:background"/>
    <attr name="android:fitsSystemWindows"/>
    <attr name="android:maxWidth"/>
    <attr name="elevation"/>
    <!-- The menu resource to inflate and populate items from. -->
    <attr name="menu" format="reference"/>
    <attr name="itemIconTint" format="color"/>
    <attr name="itemTextColor" format="color"/>
    <attr name="itemBackground" format="reference"/>
    <attr name="itemTextAppearance" format="reference"/>
    <!-- Layout resource to inflate as the header -->
    <attr name="headerLayout" format="reference"/>
  </declare-styleable>

  <declare-styleable name="TabLayout">
    <!-- Color of the indicator used to show the currently selected tab. -->
    <attr name="tabIndicatorColor" format="color"/>
    <!-- {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
         tabIndicator attribute in order to change the indicator height. For example, this can be
         done by setting the <size> property in a <shape> resource.} -->
    <attr name="tabIndicatorHeight" format="dimension"/>
    <!-- Position in the Y axis from the starting edge that tabs should be positioned from. -->
    <attr name="tabContentStart" format="dimension"/>
    <!-- Reference to a background to be applied to tabs. -->
    <attr name="tabBackground" format="reference"/>
    <!-- Reference to a drawable to use as selection indicator for tabs. If this attribute is not
         specified, indicator defaults to a line along the bottom of the tab. -->
    <attr name="tabIndicator" format="reference"/>
    <!-- Gravity constant for tab selection indicator. -->
    <attr name="tabIndicatorGravity">
      <!-- Align indicator to the bottom of this tab layout. -->
      <enum name="bottom" value="0"/>
      <!-- Align indicator along the center of this tab layout. -->
      <enum name="center" value="1"/>
      <!-- Align indicator to the top of this tab layout. -->
      <enum name="top" value="2"/>
      <!-- Stretch indicator to match the height and width of a tab item in this layout. -->
      <enum name="stretch" value="3"/>
    </attr>
    <!-- The behavior mode for the Tabs in this layout -->
    <attr name="tabMode">
      <enum name="scrollable" value="0"/>
      <enum name="fixed" value="1"/>
    </attr>
    <!-- Gravity constant for tabs. -->
    <attr name="tabGravity">
      <enum name="fill" value="0"/>
      <enum name="center" value="1"/>
    </attr>
    <!-- Whether to display tab labels horizontally inline with icons, or underneath icons. -->
    <attr name="tabInlineLabel" format="boolean"/>
    <!-- The minimum width for tabs. -->
    <attr name="tabMinWidth" format="dimension"/>
    <!-- The maximum width for tabs. -->
    <attr name="tabMaxWidth" format="dimension"/>
    <!-- A reference to a TextAppearance style to be applied to tabs. -->
    <attr name="tabTextAppearance" format="reference"/>
    <!-- The default text color to be applied to tabs. -->
    <attr name="tabTextColor" format="color"/>
    <!-- {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
         selected color set.}  -->
    <attr name="tabSelectedTextColor" format="color"/>
    <!-- The preferred padding along the start edge of tabs. -->
    <attr name="tabPaddingStart" format="dimension"/>
    <!-- The preferred padding along the top edge of tabs. -->
    <attr name="tabPaddingTop" format="dimension"/>
    <!-- The preferred padding along the end edge of tabs. -->
    <attr name="tabPaddingEnd" format="dimension"/>
    <!-- The preferred padding along the bottom edge of tabs. -->
    <attr name="tabPaddingBottom" format="dimension"/>
    <!-- The preferred padding along all edges of tabs. -->
    <attr name="tabPadding" format="dimension"/>
    <!-- Tint to apply to tab icons, if present. This can be a color state list or a color. -->
    <attr name="tabIconTint" format="color"/>
    <!-- Blending mode to apply to tab icons. -->
    <attr name="tabIconTintMode">
      <enum name="src_over" value="3"/>
      <enum name="src_in" value="5"/>
      <enum name="src_atop" value="9"/>
      <enum name="multiply" value="14"/>
      <enum name="screen" value="15"/>
      <enum name="add" value="16"/>
    </attr>
    <!-- Ripple color for the tabs. This may be a color state list, if the desired ripple color
         should be stateful.-->
    <attr name="tabRippleColor" format="color"/>
  </declare-styleable>

  <declare-styleable name="TabItem">
    <!-- Text to display in the tab. -->
    <attr name="android:text"/>
    <!-- Icon to display in the tab. -->
    <attr name="android:icon"/>
    <!-- A reference to a layout resource to be displayed in the tab. -->
    <attr name="android:layout"/>
  </declare-styleable>

  <declare-styleable name="TextInputLayout">
    <!-- The text color for input text. -->
    <attr name="android:textColorHint"/>

    <!-- The hint to display in the floating label. -->
    <attr name="android:hint"/>
    <!-- Whether the layout's floating label functionality is enabled. -->
    <attr name="hintEnabled" format="boolean"/>
    <!-- Whether to animate hint state changes. -->
    <attr name="hintAnimationEnabled" format="boolean"/>
    <!-- TextAppearance of the hint in the floating label. -->
    <attr name="hintTextAppearance" format="reference"/>

    <!-- The text to display as helper text underneath the text input area. -->
    <attr name="helperText" format="string"/>
    <!-- Whether the layout's helper text functionality is enabled. -->
    <attr name="helperTextEnabled" format="boolean"/>
    <!-- TextAppearance of the helper text displayed underneath the text input area. -->
    <attr name="helperTextTextAppearance" format="reference"/>

    <!-- Whether the layout is laid out as if an error will be displayed. -->
    <attr name="errorEnabled" format="boolean"/>
    <!-- TextAppearance of any error message displayed. -->
    <attr name="errorTextAppearance" format="reference"/>

    <!-- Whether the layout is laid out as if the character counter will be displayed. -->
    <attr name="counterEnabled" format="boolean"/>
    <!-- The max length to display in the character counter. -->
    <attr name="counterMaxLength" format="integer"/>
    <!-- TextAppearance of the character counter. -->
    <attr name="counterTextAppearance" format="reference"/>
    <!-- TextAppearance of the character counter when the text is longer than the max. -->
    <attr name="counterOverflowTextAppearance" format="reference"/>

    <!-- Whether the view will display a toggle when the EditText has a password. -->
    <attr name="passwordToggleEnabled" format="boolean"/>
    <!-- Drawable to use as the password input visibility toggle icon. -->
    <attr name="passwordToggleDrawable" format="reference"/>
    <!-- Text to set as the content description for the password input visibility toggle. -->
    <attr name="passwordToggleContentDescription" format="string"/>
    <!-- Icon to use for the password input visibility toggle -->
    <attr name="passwordToggleTint" format="color"/>
    <!-- Blending mode used to apply the background tint. -->
    <attr name="passwordToggleTintMode">
      <!-- The tint is drawn on top of the drawable.
           [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
      <enum name="src_over" value="3"/>
      <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
           color channels are thrown out. [Sa * Da, Sc * Da] -->
      <enum name="src_in" value="5"/>
      <!-- The tint is drawn above the drawable, but with the drawable’s alpha
           channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
      <enum name="src_atop" value="9"/>
      <!-- Multiplies the color and alpha channels of the drawable with those of
           the tint. [Sa * Da, Sc * Dc] -->
      <enum name="multiply" value="14"/>
      <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
      <enum name="screen" value="15"/>
    </attr>

    <!-- Whether the text input area should be drawn as a filled box, an outline box, or not as a box.-->
    <attr name="boxBackgroundMode">
      <!-- Specifies that there should be no box set on the text input area. -->
      <enum name="none" value="0"/>
      <!-- Filled box mode for the text input box. -->
      <enum name="filled" value="1"/>
      <!-- Outline box mode for the text input box. -->
      <enum name="outline" value="2"/>
    </attr>
    <!-- Value to use for the EditText's left padding in box mode. -->
    <attr name="boxPaddingLeft" format="dimension"/>
    <!-- Value to use for the EditText's collapsed top padding in box mode. -->
    <attr name="boxCollapsedPaddingTop" format="dimension"/>
    <!-- Value to use for the EditText's expanded top padding in box mode. -->
    <attr name="boxExpandedPaddingTop" format="dimension"/>
    <!-- Value to use for the EditText's right padding in box mode. -->
    <attr name="boxPaddingRight" format="dimension"/>
    <!-- Value to use for the EditText's collapsed bottom padding in box mode. -->
    <attr name="boxCollapsedPaddingBottom" format="dimension"/>
    <!-- The value to use for the box's top left corner radius when in box mode. -->
    <attr name="boxCornerRadiusTopLeft" format="dimension"/>
    <!-- The value to use for the box's top right corner radius when in box mode. -->
    <attr name="boxCornerRadiusTopRight" format="dimension"/>
    <!-- The value to use for the box's bottom left corner radius when in box mode. -->
    <attr name="boxCornerRadiusBottomLeft" format="dimension"/>
    <!-- The value to use for the box's bottom right corner radius when in box mode. -->
    <attr name="boxCornerRadiusBottomRight" format="dimension"/>
    <!-- Value to use for the EditText's expanded bottom padding in box mode. -->
    <attr name="boxExpandedPaddingBottom" format="dimension"/>
    <!-- The color to use for the box's stroke when in outline box mode. -->
    <attr name="boxStrokeColor" format="color"/>
    <!-- The color to use for the box's background color when in filled box mode. -->
    <attr name="boxBackgroundColor" format="color"/>
    <!-- The value to use for the box's stroke when in outline box mode. -->
    <attr name="boxStrokeWidth" format="dimension"/>
  </declare-styleable>

  <declare-styleable name="AppBarLayout">
    <!-- Deprecated. Elevation is now controlled via a state list animator. -->
    <attr name="elevation"/>
    <attr name="android:background"/>
    <!-- The initial expanded state for the AppBarLayout. This only takes effect when this
         view is a direct child of a CoordinatorLayout. -->
    <attr name="expanded" format="boolean"/>
    <attr name="android:keyboardNavigationCluster"/>
    <attr name="android:touchscreenBlocksFocus"/>
  </declare-styleable>

  <declare-styleable name="AppBarLayoutStates">
    <!-- State value for {@link android.support.design.widget.AppBarLayout} set when the view
         has been collapsed. -->
    <attr name="state_collapsed" format="boolean"/>
    <!-- State value for {@link android.support.design.widget.AppBarLayout} set when the view
         has children which are capable of being collapsed. -->
    <attr name="state_collapsible" format="boolean"/>
  </declare-styleable>

  <declare-styleable name="AppBarLayout_Layout">
    <attr name="layout_scrollFlags">
      <!-- The view will be scroll in direct relation to scroll events. This flag needs to be
           set for any of the other flags to take effect. If any sibling views
           before this one do not have this flag, then this value has no effect. -->
      <flag name="scroll" value="0x1"/>

      <!-- When exiting (scrolling off screen) the view will be scrolled until it is
           'collapsed'. The collapsed height is defined by the view's minimum height. -->
      <flag name="exitUntilCollapsed" value="0x2"/>

      <!-- When entering (scrolling on screen) the view will scroll on any downwards
           scroll event, regardless of whether the scrolling view is also scrolling. This
           is commonly referred to as the 'quick return' pattern. -->
      <flag name="enterAlways" value="0x4"/>

      <!-- An additional flag for 'enterAlways' which modifies the returning view to
           only initially scroll back to it's collapsed height. Once the scrolling view has
           reached the end of it's scroll range, the remainder of this view will be scrolled
           into view. -->
      <flag name="enterAlwaysCollapsed" value="0x8"/>

      <!-- Upon a scroll ending, if the view is only partially visible then it will be
           snapped and scrolled to it's closest edge. -->
      <flag name="snap" value="0x10"/>
    </attr>

    <!-- An interpolator to use when scrolling this View. Only takes effect when View
         is scrollable. -->
    <attr name="layout_scrollInterpolator" format="reference"/>
  </declare-styleable>

  <declare-styleable name="ScrollingViewBehavior_Layout">
    <!-- The amount that the scrolling view should overlap the bottom of any AppBarLayout -->
    <attr name="behavior_overlapTop" format="dimension"/>
  </declare-styleable>

  <declare-styleable name="CollapsingToolbarLayout">
    <!--  Specifies extra space on the start, top, end and bottom
          sides of the the expanded title text. Margin values should be positive. -->
    <attr name="expandedTitleMargin" format="dimension"/>
    <!--  Specifies extra space on the start side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginStart" format="dimension"/>
    <!--  Specifies extra space on the top side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginTop" format="dimension"/>
    <!--  Specifies extra space on the end side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginEnd" format="dimension"/>
    <!--  Specifies extra space on the bottom side of the the expanded title text.
          Margin values should be positive. -->
    <attr name="expandedTitleMarginBottom" format="dimension"/>
    <!-- The text appearance of the CollapsingToolbarLayout's title when it is fully
         'expanded' -->
    <attr name="expandedTitleTextAppearance" format="reference"/>
    <!-- The text appearance of the CollapsingToolbarLayouts title when it is fully
         'collapsed' -->
    <attr name="collapsedTitleTextAppearance" format="reference"/>
    <!-- The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
         it has been scrolled sufficiently off screen. -->
    <attr name="contentScrim" format="color"/>
    <!-- The drawable to use as a scrim for the status bar content when the
         CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
         Lollipop with the correct setup. -->
    <attr name="statusBarScrim" format="color"/>
    <!-- The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
         This Toolbar descendant view does not need to be a direct child of the layout.
         If you do not set this, the first direct Toolbar child found will be used. -->
    <attr name="toolbarId" format="reference"/>
    <!-- Specifies the amount of visible height in pixels used to define when to trigger a
         scrim visibility change. -->
    <attr name="scrimVisibleHeightTrigger" format="dimension"/>
    <!-- Specifies the duration used for scrim visibility animations. -->
    <attr name="scrimAnimationDuration" format="integer"/>

    <!-- Specifies how the title should be positioned when collapsed. -->
    <attr name="collapsedTitleGravity">
      <!-- Push title to the top of its container, not changing its size. -->
      <flag name="top" value="0x30"/>
      <!-- Push title to the bottom of its container, not changing its size. -->
      <flag name="bottom" value="0x50"/>
      <!-- Push title to the left of its container, not changing its size. -->
      <flag name="left" value="0x03"/>
      <!-- Push title to the right of its container, not changing its size. -->
      <flag name="right" value="0x05"/>
      <!-- Place title in the vertical center of its container, not changing its size. -->
      <flag name="center_vertical" value="0x10"/>
      <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
      <flag name="fill_vertical" value="0x70"/>
      <!-- Place title in the horizontal center of its container, not changing its size. -->
      <flag name="center_horizontal" value="0x01"/>
      <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
      <flag name="center" value="0x11"/>
      <!-- Push title to the beginning of its container, not changing its size. -->
      <flag name="start" value="0x00800003"/>
      <!-- Push title to the end of its container, not changing its size. -->
      <flag name="end" value="0x00800005"/>
    </attr>

    <!-- Specifies how the title should be positioned when expanded. -->
    <attr name="expandedTitleGravity">
      <!-- Push title to the top of its container, not changing its size. -->
      <flag name="top" value="0x30"/>
      <!-- Push title to the bottom of its container, not changing its size. -->
      <flag name="bottom" value="0x50"/>
      <!-- Push title to the left of its container, not changing its size. -->
      <flag name="left" value="0x03"/>
      <!-- Push title to the right of its container, not changing its size. -->
      <flag name="right" value="0x05"/>
      <!-- Place title in the vertical center of its container, not changing its size. -->
      <flag name="center_vertical" value="0x10"/>
      <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
      <flag name="fill_vertical" value="0x70"/>
      <!-- Place title in the horizontal center of its container, not changing its size. -->
      <flag name="center_horizontal" value="0x01"/>
      <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
      <flag name="center" value="0x11"/>
      <!-- Push title to the beginning of its container, not changing its size. -->
      <flag name="start" value="0x00800003"/>
      <!-- Push title to the end of its container, not changing its size. -->
      <flag name="end" value="0x00800005"/>
    </attr>

    <!-- Whether the CollapsingToolbarLayout should draw its own shrinking/growing title. -->
    <attr name="titleEnabled" format="boolean"/>
    <!-- The title to show when titleEnabled is set to true. -->
    <attr name="title"/>
  </declare-styleable>

  <declare-styleable name="CollapsingToolbarLayout_Layout">
    <attr name="layout_collapseMode">
      <!-- The view will act as normal with no collapsing behavior. -->
      <enum name="none" value="0"/>
      <!-- The view will pin in place. -->
      <enum name="pin" value="1"/>
      <!-- The view will scroll in a parallax fashion. See the
           layout_collapseParallaxMultiplier attribute to change the multiplier. -->
      <enum name="parallax" value="2"/>
    </attr>

    <!-- The multiplier used when layout_collapseMode is set to 'parallax'. The value should
         be between 0.0 and 1.0. -->
    <attr name="layout_collapseParallaxMultiplier" format="float"/>
  </declare-styleable>

  <declare-styleable name="BottomSheetBehavior_Layout">
    <!-- The height of the bottom sheet when it is collapsed. -->
    <attr name="behavior_peekHeight" format="dimension">
      <!-- Peek at the 16:9 ratio keyline of its parent -->
      <enum name="auto" value="-1"/>
    </attr>
    <!-- Whether this bottom sheet can be hidden by dragging it further downwards -->
    <attr name="behavior_hideable" format="boolean"/>
    <!-- Skip the collapsed state once expanded; no effect unless it is hideable -->
    <attr name="behavior_skipCollapsed" format="boolean"/>
    <!-- Whether height of expanded sheet wraps content or not -->
    <attr name="behavior_fitToContents" format="boolean"/>
  </declare-styleable>

  <declare-styleable name="BottomNavigationView">
    <!-- The menu resource to inflate and populate items from. -->
    <attr name="menu"/>
    <!-- Whether navigation items display with a label, without a label, or with a label during
         selected state. Can also be legacy, which defers to shiftingMode to decide whether the
         label should be shown.  -->
    <attr name="labelVisibilityMode">
      <!-- Label is shown when shiftingMode is enabled, or hidden when it is not.-->
      <enum name="legacy" value="-1"/>
      <!-- Label is shown on the selected navigation item. -->
      <enum name="selected" value="0"/>
      <!-- Label is shown on all navigation items. -->
      <enum name="labeled" value="1"/>
      <!-- Label is not shown on any navigation items. -->
      <enum name="unlabeled" value="2"/>
    </attr>
    <attr name="itemBackground"/>
    <!-- The tint to apply to the navigation items' icons. -->
    <attr name="itemIconTint"/>
    <!-- The color to apply to the navigation items' text. -->
    <attr name="itemTextColor"/>
    <!-- Whether the items should translate horizontally when in shifting mode. -->
    <attr name="itemHorizontalTranslation" format="boolean"/>
    <attr name="elevation"/>
    <!--
      Whether shifting mode, which hides label on all but the active view, should be enabled
      for BottomNavigationView.
      (see https://material.io/guidelines/components/bottom-navigation.html#bottom-navigation-specs)
    -->
    <attr name="shiftingMode">
      <enum name="auto" value="-1"/>
      <enum name="off" value="0"/>
      <enum name="on" value="1"/>
    </attr>
  </declare-styleable>

</resources>
